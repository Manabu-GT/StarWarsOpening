apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    // Gets the revision number from the Git
    def getRevision = { ->
        try {
            def stdout = new ByteArrayOutputStream()
            exec {
                commandLine 'git', 'rev-parse', 'HEAD'
                standardOutput = stdout
            }
            // pick first six characters
            return stdout.toString().trim().substring(0, 6)
        } catch (Exception e) {
            return ""
        }
    }

    defaultConfig {
        applicationId "com.ms_square.starwars.opening"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 1
        versionName "1.0.0"

        setProperty("archivesBaseName", "starwars-opening-$versionName-$getRevision")

        vectorDrawables.useSupportLibrary = true

//        Disabled till issues are resolved. see https://github.com/nickwph/annotation-processor-with-java8-jack-and-jill-android
//        jackOptions {
//            enabled true
//        }
    }

//    compileOptions {
//        encoding = "UTF-8"
//        sourceCompatibility JavaVersion.VERSION_1_8
//        targetCompatibility JavaVersion.VERSION_1_8
//    }

    signingConfigs {
        release {
            def Properties keyProps = new Properties()
            // double check if keystore.properties exists to avoid exception
            if (file("../keystore.properties").exists()) {
                keyProps.load(new FileInputStream(file('../keystore.properties')))
            }
            storeFile keyProps["storeFile"] != null ? file(keyProps["storeFile"]) : null
            storePassword keyProps["storePassword"]
            keyAlias keyProps["keyAlias"]
            keyPassword keyProps["keyPassword"]
        }
    }

    buildTypes {
        debug {
            buildConfigField "String", "BUILD_NUMBER", "\"" + getRevision() + "\""
            // code shrinker to support pre-dexing and reduce re-dexing of dependencies
            minifyEnabled true
            useProguard false
        }
        release {
            buildConfigField "String", "BUILD_NUMBER", "\"" + getRevision() + "(R)\""
            minifyEnabled true
            useProguard false // true is the default for release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            // check if keystore.properties exists in the root
            if (file("../keystore.properties").exists()) {
                signingConfig signingConfigs.release
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    // v7 includes vector drawable support library
    compile 'com.android.support:appcompat-v7:25.1.1'
    compile 'com.android.support:percent:25.1.1'
}
